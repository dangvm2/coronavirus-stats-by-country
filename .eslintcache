[{"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/index.js":"1","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/App.js":"2","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/reportWebVitals.js":"3","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/components/SearchBox.js":"4","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/components/SearchResult.js":"5","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/store.js":"6","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/reducers/reducer.js":"7","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/reducers/statsReducer.js":"8","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/actions/statsAction.js":"9","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/constants.js":"10","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/theme.js":"11","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/pages/DataTable.js":"12","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/pages/Overview.js":"13","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/helpers/commonFunc.js":"14","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/components/Title.js":"15","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/components/Copyright.js":"16"},{"size":432,"mtime":1611298167155,"results":"17","hashOfConfig":"18"},{"size":3281,"mtime":1611298156175,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611123640724,"results":"20","hashOfConfig":"18"},{"size":876,"mtime":1611297935136,"results":"21","hashOfConfig":"18"},{"size":10727,"mtime":1611298028317,"results":"22","hashOfConfig":"18"},{"size":320,"mtime":1611298144041,"results":"23","hashOfConfig":"18"},{"size":135,"mtime":1611131492045,"results":"24","hashOfConfig":"18"},{"size":451,"mtime":1611244442711,"results":"25","hashOfConfig":"18"},{"size":309,"mtime":1611243345911,"results":"26","hashOfConfig":"18"},{"size":137,"mtime":1611298140105,"results":"27","hashOfConfig":"18"},{"size":396,"mtime":1611219087290,"results":"28","hashOfConfig":"18"},{"size":1634,"mtime":1611298078747,"results":"29","hashOfConfig":"18"},{"size":2679,"mtime":1611287873393,"results":"30","hashOfConfig":"18"},{"size":570,"mtime":1611295951919,"results":"31","hashOfConfig":"18"},{"size":1010,"mtime":1611247140181,"results":"32","hashOfConfig":"18"},{"size":503,"mtime":1611296530452,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"doplvs",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/index.js",[],["72","73"],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/App.js",["74"],"import { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport theme from \"./theme\";\nimport Overview from \"./pages/Overview\";\nimport DataTable from \"./pages/DataTable\";\nimport { Copyright } from \"./components/Copyright\";\nimport { getSummary } from \"./redux/actions/statsAction\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    paddingRight: 24,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  navButton: {\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(6),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    columnGap: \"5em\",\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getSummary().then((data) => {\n      dispatch(data);\n    });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={clsx(classes.appBar)}>\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Coronavirus Disease (COVID-19) Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.appBarSpacer} />\n\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <div className={classes.navButton}>\n          <Button\n            variant={location.pathname === \"/\" ? \"contained\" : \"outlined\"}\n            size=\"large\"\n            color=\"primary\"\n            onClick={() => history.push(\"/\")}\n          >\n            Overview\n          </Button>\n          <Button\n            variant={location.pathname === \"/table\" ? \"contained\" : \"outlined\"}\n            size=\"large\"\n            color=\"primary\"\n            onClick={() => history.push(\"/table\")}\n          >\n            Data Table\n          </Button>\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={Overview} />\n          <Route path=\"/table\" component={DataTable} />\n        </Switch>\n      </Container>\n\n      <footer className={classes.footer}>\n        <Copyright />\n      </footer>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/reportWebVitals.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/components/SearchBox.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/components/SearchResult.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/store.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/reducers/reducer.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/reducers/statsReducer.js",["75"],"import { actions } from \"../constants\";\n\nconst initialState = {\n  listCountrySummary: [],\n  globalSummary: {},\n  date: \"\",\n};\nexport default (state = initialState, newState) => {\n  switch (newState.type) {\n    case actions.SUMMARY.type:\n      return {\n        ...state,\n        listCountrySummary: newState.data.Countries,\n        globalSummary: newState.data.Global,\n        date: newState.data.Date,\n      };\n    default:\n      return state;\n  }\n};\n",["76","77"],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/actions/statsAction.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/redux/constants.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/theme.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/pages/DataTable.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/pages/Overview.js",["78","79"],"import React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useSelector } from \"react-redux\";\nimport Title from \"../components/Title\";\nimport { formatNumber, formatDate } from \"../helpers/commonFunc\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    height: 200,\n  },\n  textOverview: {\n    textAlign: \"center\",\n    paddingBottom: theme.spacing(4),\n  },\n  textBlue: {\n    color: \"#2196f3\",\n  },\n  textOrange: {\n    color: \"#ff9800\",\n  },\n}));\n\nfunction compare(a, b) {\n  if (a.NewConfirmed < b.NewConfirmed) {\n    return 1;\n  }\n  if (a.NewConfirmed > b.NewConfirmed) {\n    return -1;\n  }\n  return 0;\n}\n\nexport default function Overview() {\n  const classes = useStyles();\n\n  const globalSummary = useSelector((state) => state.stats.globalSummary);\n  const date = useSelector((state) => state.stats.date);\n  const listCountrySummary = useSelector(\n    (state) => state.stats.listCountrySummary\n  );\n\n  return (\n    <div>\n      <Typography variant=\"h4\" className={classes.textOverview}>\n        <span className={classes.textBlue}>Globally</span>\n        {\", as of\"}\n        <span className={classes.textBlue}>{formatDate(date)}</span>\n        {\", there have been \"}\n        <span className={classes.textBlue}>\n          {globalSummary.NewConfirmed}\n          {\" confirmed cases\"}\n        </span>\n        {\" of COVID-19, including \"}\n        <span className={classes.textOrange}>\n          {globalSummary.NewDeaths}\n          {\" deaths\"}\n        </span>\n        .\n      </Typography>\n      <Typography variant=\"h6\">\n        Top countries with new confirmed covid cases\n      </Typography>\n      <Grid container className={classes.container} spacing={3}>\n        {listCountrySummary.length > 0 &&\n          listCountrySummary\n            .sort(compare)\n            .slice(0, 8)\n            .map((item, index) => {\n              return (\n                <Grid item xs={3} key={index}>\n                  <Paper className={classes.paper}>\n                    <Title\n                      countryCode={item.CountryCode}\n                      text={item.Country}\n                      statNumber={formatNumber(item.NewConfirmed)}\n                      type={\"confirmed cases\"}\n                    />\n                  </Paper>\n                </Grid>\n              );\n            })}\n      </Grid>\n    </div>\n  );\n}\n","/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/helpers/commonFunc.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/components/Title.js",[],"/Users/dangvu/Desktop/GitHub/coronavirus-stats-by-country/src/components/Copyright.js",["80","81"],"import React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\n\nexport const Copyright = () => {\n  return (\n    <Container maxWidth=\"sm\">\n      <Typography variant=\"body1\" align=\"center\">\n        {\"Powered by \"}\n        <Link href=\"http://linkedin.com/in/dang-vu-minh-3b4017196\">\n          {\"Dang Vu\"}\n        </Link>\n      </Typography>\n    </Container>\n  );\n};\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":62,"column":6,"nodeType":"88","endLine":62,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":8,"column":1,"nodeType":"92","endLine":20,"endColumn":3},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["102"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["100"],["101"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [dispatch]",{"range":"105","text":"106"},[1845,1847],"[dispatch]"]